// <auto-generated />
using System;
using Authentication.API.Infrastructure.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Authentication.API.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20230207194927_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Authentication.API.Infrastructure.Entities.Credential", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId");

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("Credentials");
                });

            modelBuilder.Entity("Authentication.API.Infrastructure.Entities.RefreshToken", b =>
                {
                    b.Property<string>("Token")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("CredentialUserId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Expiry")
                        .HasColumnType("datetime2");

                    b.HasKey("Token");

                    b.HasIndex("CredentialUserId");

                    b.ToTable("RefreshTokens");
                });

            modelBuilder.Entity("Authentication.API.Infrastructure.Entities.Role", b =>
                {
                    b.Property<int>("CredentialUserId")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<DateTime>("Expiry")
                        .HasColumnType("datetime2");

                    b.HasKey("CredentialUserId", "Type");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("Authentication.API.Infrastructure.Entities.RefreshToken", b =>
                {
                    b.HasOne("Authentication.API.Infrastructure.Entities.Credential", "Credential")
                        .WithMany("RefreshTokens")
                        .HasForeignKey("CredentialUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Credential");
                });

            modelBuilder.Entity("Authentication.API.Infrastructure.Entities.Role", b =>
                {
                    b.HasOne("Authentication.API.Infrastructure.Entities.Credential", "Credential")
                        .WithMany("Roles")
                        .HasForeignKey("CredentialUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Credential");
                });

            modelBuilder.Entity("Authentication.API.Infrastructure.Entities.Credential", b =>
                {
                    b.Navigation("RefreshTokens");

                    b.Navigation("Roles");
                });
#pragma warning restore 612, 618
        }
    }
}
